{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from 'axios';\n\nconst useForm = (FormType, validator, setUser) => {\n  _s();\n\n  const default_values = () => {\n    if (FormType === \"Login\") {\n      return {\n        email: \"\",\n        password: \"\"\n      };\n    }\n\n    if (FormType === \"SignUp\") {\n      return {\n        full_name: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\",\n        gender: \"\"\n      };\n    }\n\n    if (FormType === \"ForgotPassword\") {\n      return {\n        email: \"\"\n      };\n    }\n  };\n\n  const [values, setValues] = useState(() => default_values // if (FormType === \"Login\"){\n  //     return {\n  //         email: \"\",\n  //         password: \"\"\n  //     }\n  // }\n  // if (FormType === \"SignUp\"){\n  //     return {\n  //         full_name: \"\",\n  //         email: \"\",\n  //         password: \"\",\n  //         confirm_password: \"\",\n  //         gender: \"\"\n  //     }\n  // }\n  // if (FormType === \"ForgotPassword\"){\n  //     return {\n  //         email: \"\"\n  //     }\n  // }\n  );\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validator(FormType, values));\n\n    if (Object.keys(errors).length === 0) {\n      if (FormType === \"Login\") {\n        axios.post('user/login', values).then(res => {\n          localStorage.setItem('token', res.token);\n          setUser(res.user);\n        }).catch(err => console.log(err));\n      }\n\n      if (FormType === \"SignUp\") {\n        axios.post('user/sign-up', values).then(res => console.log(res)).catch(err => console.log(err));\n      }\n\n      if (FormType === \"ForgotPassword\") {\n        axios.post('user/forgot-password', values).then(res => console.log(res)).catch(err => console.log(err));\n      }\n\n      setValues(default_values);\n    }\n  }; // useEffect(() => {\n  //     if (Object.keys(errors).length === 0){\n  //         if (FormType === \"Login\"){\n  //             axios.post('user/login', values).then(\n  //                 res => {\n  //                     localStorage.setItem('token', res.token)\n  //                     setUser(res.user)\n  //                 }\n  //             ).catch(\n  //                 err => console.log(err)\n  //             )\n  //         }\n  //         if (FormType === \"SignUp\"){\n  //             axios.post('user/sign-up', values).then(\n  //                 res => console.log(res)\n  //             ).catch(\n  //                 err => console.log(err)\n  //             )\n  //         }\n  //         if (FormType === \"ForgotPassword\"){\n  //             axios.post('user/forgot-password', values).then(\n  //                 res => console.log(res)\n  //             ).catch(\n  //                 err => console.log(err)\n  //             )\n  //         }\n  //     }\n  // }, [errors, FormType, values])\n\n\n  return {\n    handleSubmit,\n    handleChange,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"J/uFmtQGaghG443tgzi8jn8f8HE=\");\n\nexport default useForm;","map":{"version":3,"sources":["E:/CNTT/MyProjects/Arcade Game Website/Source Code/ArcadeGameWebsite/front-end/user_website/src/Components/Popup/Form/useForm.jsx"],"names":["useState","axios","useForm","FormType","validator","setUser","default_values","email","password","full_name","confirm_password","gender","values","setValues","handleChange","e","name","value","target","errors","setErrors","handleSubmit","preventDefault","Object","keys","length","post","then","res","localStorage","setItem","token","user","catch","err","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,KAAkC;AAAA;;AAE9C,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAIH,QAAQ,KAAK,OAAjB,EAAyB;AACrB,aAAO;AACHI,QAAAA,KAAK,EAAE,EADJ;AAEHC,QAAAA,QAAQ,EAAE;AAFP,OAAP;AAIH;;AACD,QAAIL,QAAQ,KAAK,QAAjB,EAA0B;AACtB,aAAO;AACHM,QAAAA,SAAS,EAAE,EADR;AAEHF,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,QAAQ,EAAE,EAHP;AAIHE,QAAAA,gBAAgB,EAAE,EAJf;AAKHC,QAAAA,MAAM,EAAE;AALL,OAAP;AAOH;;AAED,QAAIR,QAAQ,KAAK,gBAAjB,EAAkC;AAC9B,aAAO;AACHI,QAAAA,KAAK,EAAE;AADJ,OAAP;AAGH;AACJ,GAtBD;;AAwBA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,MAAMM,cAAP,CAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AArBgC,GAApC;;AAwBA,QAAMQ,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAL,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACI,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMqB,YAAY,GAAGN,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACO,cAAF;AACAF,IAAAA,SAAS,CAAChB,SAAS,CAACD,QAAD,EAAWS,MAAX,CAAV,CAAT;;AAEA,QAAIW,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAAnC,EAAqC;AACjC,UAAItB,QAAQ,KAAK,OAAjB,EAAyB;AACrBF,QAAAA,KAAK,CAACyB,IAAN,CAAW,YAAX,EAAyBd,MAAzB,EAAiCe,IAAjC,CACIC,GAAG,IAAI;AACHC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,KAAlC;AACA1B,UAAAA,OAAO,CAACuB,GAAG,CAACI,IAAL,CAAP;AACH,SAJL,EAKEC,KALF,CAMIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX;AAQH;;AACD,UAAI/B,QAAQ,KAAK,QAAjB,EAA0B;AACtBF,QAAAA,KAAK,CAACyB,IAAN,CAAW,cAAX,EAA2Bd,MAA3B,EAAmCe,IAAnC,CACIC,GAAG,IAAIO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CADX,EAEEK,KAFF,CAGIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHX;AAKH;;AAED,UAAI/B,QAAQ,KAAK,gBAAjB,EAAkC;AAC9BF,QAAAA,KAAK,CAACyB,IAAN,CAAW,sBAAX,EAAmCd,MAAnC,EAA2Ce,IAA3C,CACIC,GAAG,IAAIO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CADX,EAEEK,KAFF,CAGIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHX;AAKH;;AACDrB,MAAAA,SAAS,CAACP,cAAD,CAAT;AACH;AACJ,GAhCD,CA5D8C,CA8F9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAO;AAAEe,IAAAA,YAAF;AAAgBP,IAAAA,YAAhB;AAA8BF,IAAAA,MAA9B;AAAuCO,IAAAA;AAAvC,GAAP;AACH,CA7HD;;GAAMjB,O;;AA+HN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\r\nimport axios from 'axios'\r\n\r\nconst useForm = (FormType, validator, setUser) => {\r\n\r\n    const default_values = () => {\r\n        if (FormType === \"Login\"){\r\n            return {\r\n                email: \"\",\r\n                password: \"\"\r\n            }\r\n        }\r\n        if (FormType === \"SignUp\"){\r\n            return {\r\n                full_name: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirm_password: \"\",\r\n                gender: \"\"\r\n            }\r\n        }\r\n\r\n        if (FormType === \"ForgotPassword\"){\r\n            return {\r\n                email: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    const [values, setValues] = useState(() => default_values\r\n        // if (FormType === \"Login\"){\r\n        //     return {\r\n        //         email: \"\",\r\n        //         password: \"\"\r\n        //     }\r\n        // }\r\n        // if (FormType === \"SignUp\"){\r\n        //     return {\r\n        //         full_name: \"\",\r\n        //         email: \"\",\r\n        //         password: \"\",\r\n        //         confirm_password: \"\",\r\n        //         gender: \"\"\r\n        //     }\r\n        // }\r\n\r\n        // if (FormType === \"ForgotPassword\"){\r\n        //     return {\r\n        //         email: \"\"\r\n        //     }\r\n        // }\r\n    )\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErrors(validator(FormType, values));\r\n\r\n        if (Object.keys(errors).length === 0){\r\n            if (FormType === \"Login\"){\r\n                axios.post('user/login', values).then(\r\n                    res => {\r\n                        localStorage.setItem('token', res.token)\r\n                        setUser(res.user)\r\n                    }\r\n                ).catch(\r\n                    err => console.log(err)\r\n                )\r\n            }\r\n            if (FormType === \"SignUp\"){\r\n                axios.post('user/sign-up', values).then(\r\n                    res => console.log(res)\r\n                ).catch(\r\n                    err => console.log(err)\r\n                )\r\n            }\r\n    \r\n            if (FormType === \"ForgotPassword\"){\r\n                axios.post('user/forgot-password', values).then(\r\n                    res => console.log(res)\r\n                ).catch(\r\n                    err => console.log(err)\r\n                )\r\n            }\r\n            setValues(default_values)\r\n        }   \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (Object.keys(errors).length === 0){\r\n    //         if (FormType === \"Login\"){\r\n    //             axios.post('user/login', values).then(\r\n    //                 res => {\r\n    //                     localStorage.setItem('token', res.token)\r\n    //                     setUser(res.user)\r\n    //                 }\r\n    //             ).catch(\r\n    //                 err => console.log(err)\r\n    //             )\r\n    //         }\r\n    //         if (FormType === \"SignUp\"){\r\n    //             axios.post('user/sign-up', values).then(\r\n    //                 res => console.log(res)\r\n    //             ).catch(\r\n    //                 err => console.log(err)\r\n    //             )\r\n    //         }\r\n    \r\n    //         if (FormType === \"ForgotPassword\"){\r\n    //             axios.post('user/forgot-password', values).then(\r\n    //                 res => console.log(res)\r\n    //             ).catch(\r\n    //                 err => console.log(err)\r\n    //             )\r\n    //         }\r\n    //     }\r\n    // }, [errors, FormType, values])\r\n\r\n    return { handleSubmit, handleChange, values , errors}\r\n}\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}