{"ast":null,"code":"var _jsxFileName = \"E:\\\\CNTT\\\\MyProjects\\\\arcade\\\\front-end\\\\user_website\\\\src\\\\Pages\\\\UserAccount\\\\SideBar\\\\sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from 'axios';\nimport './sidebar.css';\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\nimport { BackgroundColorContext } from \"../BackgroundColorContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SideBar({\n  user\n}) {\n  _s();\n\n  const sidebarRef = React.useRef(null);\n\n  const getAvatar = () => {\n    axios.get('/uploads/images/users/' + user.Avatar).then(res => {\n      console.log(res);\n    });\n  };\n\n  const {\n    routes,\n    rtlActive\n  } = props;\n\n  var showImg = function (event) {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n  };\n\n  return !user ? /*#__PURE__*/_jsxDEV(BackgroundColorContext.Consumer, {\n    children: ({\n      color\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      data: color,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-wrapper\",\n        ref: sidebarRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            runat: \"server\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avatar-img\",\n              src: \"\",\n              alt: \"\",\n              id: \"output\",\n              width: \"200px\",\n              height: \"200px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"image/*\",\n              className: \"inputImg\",\n              type: \"file\",\n              onChange: showImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getAvatar,\n            children: \"abc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          children: routes.map(prop => {\n            if (prop.redirect) return null;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                to: prop.layout + prop.path,\n                className: \"nav-link\",\n                activeClassName: \"active\",\n                onClick: props.toggleSidebar,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: prop.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: rtlActive ? prop.rtlName : prop.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(SideBar, \"01sjmUsQ4TZs9cn1gZWZ56w/WRI=\");\n\n_c = SideBar;\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["E:/CNTT/MyProjects/arcade/front-end/user_website/src/Pages/UserAccount/SideBar/sidebar.jsx"],"names":["React","axios","NavLink","Nav","BackgroundColorContext","SideBar","user","sidebarRef","useRef","getAvatar","get","Avatar","then","res","console","log","routes","rtlActive","props","showImg","event","output","document","getElementById","src","URL","createObjectURL","target","files","color","map","prop","redirect","layout","path","toggleSidebar","icon","rtlName","name"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\nimport './sidebar.css'\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Nav } from \"reactstrap\";\r\nimport {\r\n  BackgroundColorContext\r\n} from \"../BackgroundColorContext\";\r\n\r\nfunction SideBar({user}) {\r\n  const sidebarRef = React.useRef(null);\r\n  const getAvatar = () => {\r\n    axios.get('/uploads/images/users/' + user.Avatar ).then(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n  const { routes, rtlActive } = props;\r\n  var showImg = function(event) {\r\n    var output = document.getElementById('output');\r\n    output.src = URL.createObjectURL(event.target.files[0]);\r\n  };\r\n  return(!user) ? (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color }) => (\r\n        <div className=\"sidebar\" data={color}>\r\n          <div className=\"sidebar-wrapper\" ref={sidebarRef} > \r\n              <div className=\"logo\">\r\n                <form runat=\"server\">\r\n                  <img className=\"avatar-img\" src=\"\" alt=\"\"   id=\"output\"  width=\"200px\" height=\"200px\" />            \r\n                  <input accept=\"image/*\" className=\"inputImg\" type='file' onChange={showImg}/>\r\n                </form>\r\n                <p className=\"username\"></p>\r\n                <button onClick={getAvatar}>abc</button>\r\n              </div>\r\n            <Nav>\r\n              {routes.map((prop) => {\r\n                if (prop.redirect) return null;\r\n                return (\r\n                  <li \r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className=\"nav-link\"\r\n                      activeClassName=\"active\"\r\n                      onClick={props.toggleSidebar}\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\r\n                    </NavLink>\r\n                  </li>\r\n                );\r\n              })}\r\n            </Nav>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  ):null ;\r\n}\r\n\r\n\r\nexport default SideBar;\r\n"]},"metadata":{},"sourceType":"module"}