{"ast":null,"code":"import _slicedToArray from\"C:/Users/nghia/Documents/arcade/front-end/user_website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{React,useState,useEffect}from\"react\";import axios from\"axios\";import'./played-games.css';import'bootstrap/dist/css/bootstrap.min.css';import{Card,CardHeader,CardBody,Row,Col}from\"reactstrap\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function PlayedGames(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),listGame=_useState2[0],setListGame=_useState2[1];useEffect(function(){axios.get('game/').then(function(result){setListGame(result.data);}).catch(function(err){console.log(err);});},[]);var listGameRender=function listGameRender(){return listGame.map(function(game){var gameAvaUrl=axios.defaults.baseURL+'uploads/images/games/avatar/'+game.Avatar;return/*#__PURE__*/_jsx(\"div\",{className:\"game-list show-game\",\"data-item\":game.Category,children:/*#__PURE__*/_jsxs(Link,{className:\"game-list-link\",to:'/game-detail/'+game.id+\"/\"+game.Url,children:[/*#__PURE__*/_jsx(\"img\",{className:\"game-list-img\",src:gameAvaUrl,alt:\"Cannot get\"}),/*#__PURE__*/_jsx(\"div\",{className:\"game-list-name\",children:game.Title})]})});});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{className:\"12\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Game Played\"})}),/*#__PURE__*/_jsx(CardBody,{children:listGameRender()})]})})})})});}export default PlayedGames;","map":{"version":3,"sources":["C:/Users/nghia/Documents/arcade/front-end/user_website/src/Pages/UserAccount/PlayedGames/played-games.jsx"],"names":["React","useState","useEffect","axios","Card","CardHeader","CardBody","Row","Col","Link","PlayedGames","listGame","setListGame","get","then","result","data","catch","err","console","log","listGameRender","map","game","gameAvaUrl","defaults","baseURL","Avatar","Category","id","Url","Title"],"mappings":"yIAAA,OAAUA,KAAV,CAAgBC,QAAhB,CAAyBC,SAAzB,KAA0C,OAA1C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,oBAAP,CACA,MAAO,sCAAP,CACA,OACEC,IADF,CAEEC,UAFF,CAGEC,QAHF,CAIEC,GAJF,CAKEC,GALF,KAMO,YANP,CAOA,OAASC,IAAT,KAAqB,kBAArB,C,6IAGA,QAASC,CAAAA,WAAT,EAAuB,CACnB,cAA+BT,QAAQ,CAAC,EAAD,CAAvC,wCAAOU,QAAP,eAAgBC,WAAhB,eAEAV,SAAS,CAAC,UAAM,CAChBC,KAAK,CAACU,GAAN,CAAU,OAAV,EAAmBC,IAAnB,CAAwB,SAAAC,MAAM,CAAI,CAChCH,WAAW,CAACG,MAAM,CAACC,IAAR,CAAX,CAED,CAHD,EAGGC,KAHH,CAGS,SAAAC,GAAG,CAAI,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CALD,EAMD,CAPU,CAOR,EAPQ,CAAT,CASA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAMV,CAAAA,QAAQ,CAACW,GAAT,CAAa,SAAAC,IAAI,CAAI,CAC9C,GAAMC,CAAAA,UAAU,CAAGrB,KAAK,CAACsB,QAAN,CAAeC,OAAf,CAAyB,8BAAzB,CAA0DH,IAAI,CAACI,MAAlF,CACA,mBACA,YAAK,SAAS,CAAC,qBAAf,CAAqC,YAAWJ,IAAI,CAACK,QAArD,uBACI,MAAC,IAAD,EAAM,SAAS,CAAC,gBAAhB,CAAiC,EAAE,CAAE,gBAAkBL,IAAI,CAACM,EAAvB,CAA4B,GAA5B,CAAkCN,IAAI,CAACO,GAA5E,wBACI,YAAK,SAAS,CAAC,eAAf,CAA+B,GAAG,CAAEN,UAApC,CAAgD,GAAG,CAAC,YAApD,EADJ,cAEI,YAAK,SAAS,CAAC,gBAAf,UAAiCD,IAAI,CAACQ,KAAtC,EAFJ,GADJ,EADA,CAQH,CAV4B,CAAN,EAAvB,CAWA,mBACI,sCACI,YAAK,SAAS,CAAC,SAAf,uBACI,KAAC,GAAD,wBACA,KAAC,GAAD,EAAK,SAAS,CAAC,IAAf,uBACI,MAAC,IAAD,yBACA,KAAC,UAAD,wBACA,WAAI,SAAS,CAAC,OAAd,yBADA,EADA,cAIA,KAAC,QAAD,WAEIV,cAAc,EAFlB,EAJA,GADJ,EADA,EADJ,EADJ,EADJ,CAoBH,CAED,cAAeX,CAAAA,WAAf","sourcesContent":["import  { React,useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './played-games.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction PlayedGames() {\r\n    const [listGame,setListGame] = useState([]);\r\n    \r\n    useEffect(() => {\r\n    axios.get('game/').then(result => {\r\n      setListGame(result.data)\r\n      \r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])  \r\n\r\n    const listGameRender = () => listGame.map(game => {\r\n        const gameAvaUrl = axios.defaults.baseURL + 'uploads/images/games/avatar/' + game.Avatar;\r\n        return (\r\n        <div className=\"game-list show-game\" data-item={game.Category}>\r\n            <Link className=\"game-list-link\" to={'/game-detail/' + game.id + \"/\" + game.Url}>\r\n                <img className=\"game-list-img\" src={gameAvaUrl} alt=\"Cannot get\" />\r\n                <div className=\"game-list-name\">{game.Title}</div>\r\n            </Link>\r\n        </div>\r\n        );\r\n    })\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Row>\r\n                <Col className=\"12\">\r\n                    <Card>\r\n                    <CardHeader>\r\n                    <h1 className=\"title\">Game Played</h1>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                    {\r\n                        listGameRender()\r\n                    }\r\n                    </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayedGames;\r\n"]},"metadata":{},"sourceType":"module"}