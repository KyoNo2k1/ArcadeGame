{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJS\\\\kiet\\\\arcademain\\\\front-end\\\\user_website\\\\src\\\\Pages\\\\UserAccount\\\\PlayedGames\\\\played-games.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './played-games.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PlayedGames() {\n  _s();\n\n  const [listGame, setListGame] = useState([]);\n  useEffect(() => {\n    axios.get('game/').then(result => {\n      setListGame(result.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const listGameRender = () => listGame.map(game => {\n    const gameAvaUrl = axios.defaults.baseURL + 'uploads/images/games/avatar/' + game.Avatar;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-cell all-games\",\n      \"data-item\": game.Category,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"game-cell-link\",\n        href: '/game-detail/' + game.id + \"/\" + game.Url,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"game-cell-img\",\n          src: gameAvaUrl,\n          alt: \"Cannot get\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-cell__name\",\n          children: game.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-cell__rate\",\n          children: [\"Rate: \", game.Rate, \" / 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-cell__played\",\n          children: [\"Played: \", game.Played]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"title\",\n                children: \"Game Played\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: listGameRender()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(PlayedGames, \"kvIiiOmMTmHWnugcnsZbla38Vug=\");\n\n_c = PlayedGames;\nexport default PlayedGames;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayedGames\");","map":{"version":3,"sources":["E:/ReactJS/kiet/arcademain/front-end/user_website/src/Pages/UserAccount/PlayedGames/played-games.jsx"],"names":["React","useState","useEffect","axios","Card","CardHeader","CardBody","Row","Col","PlayedGames","listGame","setListGame","get","then","result","data","catch","err","console","log","listGameRender","map","game","gameAvaUrl","defaults","baseURL","Avatar","Category","id","Url","Title","Rate","Played"],"mappings":";;;AAAA,SAAUA,KAAV,EAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAO,sCAAP;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,GAJF,EAKEC,GALF,QAMO,YANP;;;;AASA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChBC,IAAAA,KAAK,CAACS,GAAN,CAAU,OAAV,EAAmBC,IAAnB,CAAwBC,MAAM,IAAI;AAChCH,MAAAA,WAAW,CAACG,MAAM,CAACC,IAAR,CAAX;AAED,KAHD,EAGGC,KAHH,CAGSC,GAAG,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KALD;AAMD,GAPU,EAOR,EAPQ,CAAT;;AASA,QAAMG,cAAc,GAAG,MAAMV,QAAQ,CAACW,GAAT,CAAaC,IAAI,IAAI;AAC9C,UAAMC,UAAU,GAAGpB,KAAK,CAACqB,QAAN,CAAeC,OAAf,GAAyB,8BAAzB,GAA0DH,IAAI,CAACI,MAAlF;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,mBAAWJ,IAAI,CAACK,QAArD;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAA8B,QAAA,IAAI,EAAE,kBAAkBL,IAAI,CAACM,EAAvB,GAA4B,GAA5B,GAAkCN,IAAI,CAACO,GAA3E;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,GAAG,EAAEN,UAApC;AAAgD,UAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBAAkCD,IAAI,CAACQ;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,+BAAwCR,IAAI,CAACS,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCAA4CT,IAAI,CAACU,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAUH,GAZ4B,CAA7B;;AAaA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI,QAAC,GAAD;AAAA,+BACA,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,IAAf;AAAA,iCACI,QAAC,IAAD;AAAA,oCACA,QAAC,UAAD;AAAA,qCACA;AAAI,gBAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADA,eAIA,QAAC,QAAD;AAAA,wBAEIZ,cAAc;AAFlB;AAAA;AAAA;AAAA;AAAA,oBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoBH;;GA7CQX,W;;KAAAA,W;AA+CT,eAAeA,WAAf","sourcesContent":["import  { React,useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './played-games.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction PlayedGames() {\r\n    const [listGame,setListGame] = useState([]);\r\n    \r\n    useEffect(() => {\r\n    axios.get('game/').then(result => {\r\n      setListGame(result.data)\r\n      \r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])  \r\n   \r\n    const listGameRender = () => listGame.map(game => {\r\n        const gameAvaUrl = axios.defaults.baseURL + 'uploads/images/games/avatar/' + game.Avatar;\r\n        return (\r\n        <div className=\"game-cell all-games\" data-item={game.Category}>\r\n            <a className=\"game-cell-link\" href={'/game-detail/' + game.id + \"/\" + game.Url}>\r\n            <img className=\"game-cell-img\" src={gameAvaUrl} alt=\"Cannot get\" />\r\n            <div className=\"game-cell__name\">{game.Title}</div>\r\n            <div className=\"game-cell__rate\">Rate: {game.Rate} / 10</div>\r\n            <div className=\"game-cell__played\">Played: {game.Played}</div>\r\n            </a>\r\n        </div>\r\n        );\r\n    })\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Row>\r\n                <Col className=\"12\">\r\n                    <Card>\r\n                    <CardHeader>\r\n                    <h1 className=\"title\">Game Played</h1>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                    {\r\n                        listGameRender()\r\n                    }\r\n                    </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayedGames;\r\n"]},"metadata":{},"sourceType":"module"}