{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nconst useForm = (FormType, formRef, setShowForm, validator, setUser, setDialogState) => {\n  _s();\n\n  const default_values = () => {\n    if (FormType === \"Login\") {\n      return {\n        Email: \"\",\n        Password: \"\"\n      };\n    }\n\n    if (FormType === \"SignUp\") {\n      return {\n        Full_name: \"\",\n        Email: \"\",\n        Password: \"\",\n        Confirm_password: \"\",\n        Gender: null\n      };\n    }\n\n    if (FormType === \"ForgotPassword\") {\n      return {\n        Email: \"\"\n      };\n    }\n  };\n\n  const [values, setValues] = useState(default_values);\n\n  const handleChange = e => {\n    var {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"Gender\") {\n      value = Number(value);\n    }\n\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const [errors, setErrors] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors({});\n    setErrors(validator(FormType, values));\n    setIsSubmitted(true);\n  };\n\n  useEffect(() => {\n    if (isSubmitted && Object.keys(errors).length === 0) {\n      if (FormType === \"Login\") {\n        axios.post('user/login', values).then(res => {\n          if (res.data.message === 'Authentication successful!') {\n            localStorage.setItem('token', res.data.token);\n            setUser(res.data.user);\n            setShowForm(false);\n          }\n        }).catch(err => console.log(err.mess) // setErrors(validator(FormType, 'Wrong email or password!'))\n        );\n      }\n\n      if (FormType === \"SignUp\") {\n        axios.post('user/sign-up', values).then(res => {\n          setDialogState({\n            title: \"Notify!\",\n            message: res.data.message,\n            show: true\n          });\n          setShowForm(false);\n        }).catch(err => {\n          setDialogState({\n            title: \"Error!\",\n            message: err.message,\n            show: true\n          });\n        });\n      }\n\n      if (FormType === \"ForgotPassword\") {\n        axios.post('user/forgot-password', values).then(res => {\n          setDialogState({\n            title: \"Notify!\",\n            message: res.data.message,\n            show: true\n          });\n          setShowForm(false);\n        }).catch(err => {\n          setDialogState({\n            title: \"Error!\",\n            message: err.message,\n            show: true\n          });\n        });\n      }\n\n      setValues(default_values);\n      setIsSubmitted(false);\n    }\n  }, [errors]);\n\n  const handleClose = e => {\n    if (formRef.current === e.target || e.target.className === \"close-btn\") {\n      setValues(default_values);\n      setErrors({});\n      setShowForm(false);\n    }\n  };\n\n  return {\n    handleSubmit,\n    handleClose,\n    handleChange,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"nrdWCz+o7ARfe1ya4wv7u7k3FPc=\");\n\nexport default useForm;","map":{"version":3,"sources":["E:/CNTT/MyProjects/arcade/front-end/user_website/src/Components/Popup/Form/useForm.jsx"],"names":["useEffect","useState","axios","useForm","FormType","formRef","setShowForm","validator","setUser","setDialogState","default_values","Email","Password","Full_name","Confirm_password","Gender","values","setValues","handleChange","e","name","value","target","Number","errors","setErrors","isSubmitted","setIsSubmitted","handleSubmit","preventDefault","Object","keys","length","post","then","res","data","message","localStorage","setItem","token","user","catch","err","console","log","mess","title","show","handleClose","current","className"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\n\r\nconst useForm = (FormType, formRef, setShowForm, validator, setUser, setDialogState) => {\r\n    const default_values = () => {\r\n        if (FormType === \"Login\"){\r\n            return {\r\n                Email: \"\",\r\n                Password: \"\"\r\n            }\r\n        }\r\n        if (FormType === \"SignUp\"){\r\n            return {\r\n                Full_name: \"\",\r\n                Email: \"\",\r\n                Password: \"\",\r\n                Confirm_password: \"\",\r\n                Gender: null\r\n            }\r\n        }\r\n\r\n        if (FormType === \"ForgotPassword\"){\r\n            return {\r\n                Email: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    const [values, setValues] = useState(default_values)\r\n\r\n    const handleChange = e => {\r\n        var { name, value } = e.target\r\n        if (name === \"Gender\"){\r\n            value = Number(value)\r\n        }\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        setErrors({});\r\n        setErrors(validator(FormType, values));\r\n\r\n        setIsSubmitted(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isSubmitted && Object.keys(errors).length === 0){\r\n            if (FormType === \"Login\"){\r\n                axios.post('user/login', values).then(\r\n                    res => {\r\n                        if (res.data.message === 'Authentication successful!'){\r\n                            localStorage.setItem('token', res.data.token)\r\n                            setUser(res.data.user)\r\n                            setShowForm(false)\r\n                        }\r\n                    }\r\n                ).catch(\r\n                    err => console.log(err.mess)\r\n                    // setErrors(validator(FormType, 'Wrong email or password!'))\r\n                )  \r\n            }\r\n            if (FormType === \"SignUp\"){\r\n                axios.post('user/sign-up', values).then(\r\n                    res => {\r\n                        setDialogState({\r\n                            title: \"Notify!\",\r\n                            message: res.data.message,\r\n                            show: true\r\n                        })\r\n                        setShowForm(false)\r\n                    }\r\n                ).catch(\r\n                    err => {\r\n                        setDialogState({\r\n                            title: \"Error!\",\r\n                            message: err.message,\r\n                            show: true\r\n                        })\r\n                    }\r\n                )\r\n            }\r\n    \r\n            if (FormType === \"ForgotPassword\"){\r\n                axios.post('user/forgot-password', values).then(\r\n                    res => {\r\n                        setDialogState({\r\n                            title: \"Notify!\",\r\n                            message: res.data.message,\r\n                            show: true\r\n                        })\r\n                        setShowForm(false)\r\n                    }\r\n                ).catch(\r\n                    err => {\r\n                        setDialogState({\r\n                            title: \"Error!\",\r\n                            message: err.message,\r\n                            show: true\r\n                        })\r\n                    }\r\n                )\r\n            }\r\n            setValues(default_values);\r\n            setIsSubmitted(false);\r\n        }  \r\n    }, [errors])\r\n\r\n    const handleClose = (e) => {\r\n        if (formRef.current === e.target || e.target.className === \"close-btn\"){\r\n            setValues(default_values)\r\n            setErrors({})\r\n            setShowForm(false)\r\n        }\r\n    }\r\n\r\n    return { handleSubmit, handleClose, handleChange, values , errors }\r\n}\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}