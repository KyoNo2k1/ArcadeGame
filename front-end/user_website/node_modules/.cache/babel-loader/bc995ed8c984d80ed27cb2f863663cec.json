{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\ArcadeGame\\\\front-end\\\\user_website\\\\src\\\\Pages\\\\HomePage\\\\GameGenre\\\\GameType.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import axios from 'axios'\n// import React, { useEffect , useState , useRef }from 'react'\n\nimport \"./GameType.css\";\nimport CategoriesCell from '../CategoriesCell/CategoriesCell';\nimport InfiniteCarousel from 'react-leaf-carousel';\n/* <!--Game Picture --> */\n\n/* <!--Game Link --> */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GameCategories({\n  listCategory\n}) {\n  _s();\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  };\n  const [CategoriesID, setCategoriesID] = useState([]);\n  const [CategoriesName, setCategoriesName] = useState([]);\n  const [createdAt, setCreatedAt] = useState([]);\n  let avatarGameUrl = useRef();\n\n  const getCategories = () => {\n    axios.get('/category', {\n      categoriesID: listCategory.id,\n      CategoryName: listCategory.CategoryName,\n      createdAt: listCategory.createdAt\n    }, config).then(function (response) {\n      console.log(response);\n      return axios.get('/category/id/').then(res => {\n        console.log(res.data);\n        const categoriesArr = res.data.slice(res.data.length - 3, res.data.length);\n        const saveArrcategoriesID = [categoriesArr[0].categoriesID, categoriesArr[1].categoriesID, categoriesArr[2].categoriesID];\n        const saveArrCategoryName = [categoriesArr[0].CategoryName, categoriesArr[1].CategoryName, categoriesArr[2].CategoryName];\n        const saveArrcreatedAt = [categoriesArr[0].createdAt, categoriesArr[1].createdAt, categoriesArr[2].createdAt];\n        setCategoriesID(saveArrcategoriesID);\n        setCategoriesName(saveArrCategoryName);\n        setCreatedAt(saveArrcreatedAt);\n        avatarGameUrl.current = axios.defaults.baseURL + 'uploads/images/games/' + listCategory.Avatar;\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  console.log(CategoriesName);\n  console.log(createdAt);\n  console.log(avatarGameUrl.current);\n  const allCategories = listCategory.map(categories => {\n    return /*#__PURE__*/_jsxDEV(CategoriesCell, {\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Game Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteCarousel, {\n      breakpoints: [{\n        breakpoint: 500,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2\n        }\n      }, {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3\n        }\n      }],\n      dots: true,\n      showSides: true,\n      sidesOpacity: 0.5,\n      sideSize: 0.1,\n      slidesToScroll: 4,\n      slidesToShow: 4,\n      scrollOnDevice: true,\n      children: allCategories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameCategories, \"pFCan7/2NtOWRM6+/E7X/94AT0Q=\");\n\n_c = GameCategories;\n;\nexport default GameCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCategories\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/ArcadeGame/front-end/user_website/src/Pages/HomePage/GameGenre/GameType.jsx"],"names":["React","CategoriesCell","InfiniteCarousel","GameCategories","listCategory","config","headers","Authorization","localStorage","getItem","CategoriesID","setCategoriesID","useState","CategoriesName","setCategoriesName","createdAt","setCreatedAt","avatarGameUrl","useRef","getCategories","axios","get","categoriesID","id","CategoryName","then","response","console","log","res","data","categoriesArr","slice","length","saveArrcategoriesID","saveArrCategoryName","saveArrcreatedAt","current","defaults","baseURL","Avatar","catch","err","error","allCategories","map","categories","breakpoint","settings","slidesToShow","slidesToScroll"],"mappings":"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","sourcesContent":["import React from 'react'\r\n// import axios from 'axios'\r\n// import React, { useEffect , useState , useRef }from 'react'\r\nimport \"./GameType.css\";\r\nimport CategoriesCell from '../CategoriesCell/CategoriesCell';\r\nimport InfiniteCarousel from 'react-leaf-carousel';\r\n/* <!--Game Picture --> */\r\n\r\n/* <!--Game Link --> */\r\n\r\nfunction GameCategories({listCategory}){\r\n    \r\n    \r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        };\r\n      const [CategoriesID,setCategoriesID] = useState([])\r\n      const [CategoriesName,setCategoriesName] = useState([])\r\n      const [createdAt,setCreatedAt] = useState([])\r\n      let avatarGameUrl = useRef()\r\n\r\n      const getCategories = () => {\r\n       \r\n        axios.get('/category', {\r\n            categoriesID:listCategory.id,\r\n            CategoryName: listCategory.CategoryName,\r\n            createdAt: listCategory.createdAt,\r\n            }, config)\r\n            .then(function (response) {\r\n                console.log(response)\r\n                \r\n                    return axios.get('/category/id/')\r\n                    .then((res) => {\r\n                    console.log(res.data)\r\n                    const categoriesArr = res.data.slice(res.data.length - 3,res.data.length)\r\n                    const saveArrcategoriesID = [categoriesArr[0].categoriesID,categoriesArr[1].categoriesID,categoriesArr[2].categoriesID]\r\n                    const saveArrCategoryName = [categoriesArr[0].CategoryName,categoriesArr[1].CategoryName,categoriesArr[2].CategoryName]\r\n                    const saveArrcreatedAt = [categoriesArr[0].createdAt,categoriesArr[1].createdAt,categoriesArr[2].createdAt]\r\n                    setCategoriesID(saveArrcategoriesID)\r\n                    setCategoriesName(saveArrCategoryName)\r\n                    setCreatedAt(saveArrcreatedAt)\r\n                    avatarGameUrl.current = axios.defaults.baseURL + 'uploads/images/games/' + listCategory.Avatar;\r\n                    \r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                });\r\n    }\r\n    \r\n    console.log(CategoriesName);\r\n    console.log(createdAt);\r\n    console.log(avatarGameUrl.current)\r\n\r\n    const allCategories = listCategory.map(categories => {\r\n        return (\r\n            <CategoriesCell categories={categories}/>\r\n        );\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Game Type</h3>\r\n            <InfiniteCarousel \r\n                breakpoints={[\r\n                {\r\n                    breakpoint: 500,\r\n                    settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 2,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 768,\r\n                    settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 3,\r\n                    },\r\n                },\r\n                ]}\r\n                dots={true}\r\n                showSides={true}\r\n                sidesOpacity={0.5}\r\n                sideSize={0.1}\r\n                slidesToScroll={4}\r\n                slidesToShow={4}\r\n                scrollOnDevice={true}\r\n            >\r\n                {allCategories}            \r\n            </InfiniteCarousel>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameCategories;"]},"metadata":{},"sourceType":"module"}