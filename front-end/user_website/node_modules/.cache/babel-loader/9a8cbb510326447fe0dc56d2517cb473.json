{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nconst useForm = (FormType, formRef, setShowForm, validator, user, setDialogState) => {\n  _s();\n\n  const default_values = useCallback(() => {\n    if (FormType === \"Login\") {\n      return {\n        Email: \"\",\n        Password: \"\"\n      };\n    }\n\n    if (FormType === \"SignUp\") {\n      return {\n        Full_name: \"\",\n        Email: \"\",\n        Password: \"\",\n        Confirm_password: \"\",\n        Gender: 1\n      };\n    }\n\n    if (FormType === \"ForgotPassword\") {\n      return {\n        Email: \"\"\n      };\n    }\n\n    if (FormType === \"ChangePassword\") {\n      return {\n        Old_password: \"\",\n        New_password: \"\",\n        Confirm_password: \"\"\n      };\n    }\n  }, [FormType]);\n  const [values, setValues] = useState(default_values);\n\n  const handleChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    if (name === \"Gender\") value = Number(value);\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const [errors, setErrors] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors({});\n    setErrors(validator(FormType, values));\n    setIsSubmitted(true);\n  };\n\n  useEffect(() => {\n    if (isSubmitted && Object.keys(errors).length === 0) {\n      if (FormType === \"Login\") {\n        axios.post('user/login', values).then(res => {\n          if (res.data.message === 'Authentication successful!') {\n            localStorage.setItem('token', res.data.token);\n            axios.defaults.headers.common['Authorization'] = res.data.token;\n            setShowForm(false);\n          }\n        }).catch(err => {\n          if (err.message === \"Request failed with status code 401\") {\n            setErrors(validator(FormType, 'Wrong email or password!'));\n          } else {\n            setDialogState({\n              title: \"Error!\",\n              message: err.message,\n              show: true\n            });\n          }\n        });\n      }\n\n      if (FormType === \"SignUp\") {\n        axios.post('user/sign-up', values).then(res => {\n          setDialogState({\n            title: \"Notify!\",\n            message: res.data.message,\n            show: true\n          });\n          setShowForm(false);\n        }).catch(err => {\n          setDialogState({\n            title: \"Error!\",\n            message: err.message,\n            show: true\n          });\n        });\n      }\n\n      if (FormType === \"ForgotPassword\") {\n        axios.post('user/forgot-password', values).then(res => {\n          setDialogState({\n            title: \"Notify!\",\n            message: \"Your password have been reset successfully! Please check your email for new password! (Make sure to check spam too)\",\n            show: true\n          });\n          setShowForm(false);\n        }).catch(err => {\n          setDialogState({\n            title: \"Error!\",\n            message: err.message,\n            show: true\n          });\n        });\n      }\n\n      if (FormType === \"ChangePassword\") {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        };\n        axios.post(\"user/change-password/\" + user.id, values, config).then(res => {\n          setDialogState({\n            title: \"Notify!\",\n            message: \"Your password have been changed successfully! Now you can login again with new password!\",\n            show: true\n          });\n          setShowForm(false);\n        }).catch(err => {\n          setDialogState({\n            title: \"Error!\",\n            message: err.message,\n            show: true\n          });\n        });\n      }\n\n      setValues(default_values);\n      setIsSubmitted(false);\n    }\n  }, [errors, FormType, default_values, isSubmitted, setDialogState, setShowForm, validator, values]);\n\n  const handleClose = e => {\n    if (formRef.current === e.target || e.target.className === \"close-btn\") {\n      setIsSubmitted(false);\n      setValues(default_values);\n      setErrors({});\n      setShowForm(false);\n    }\n  };\n\n  return {\n    handleSubmit,\n    handleClose,\n    handleChange,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"p/jNbEsBK/6ztEMrKhwNvzullHg=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/nghia/Documents/arcade_test_clone/front-end/user_website/src/Components/Popup/Form/useForm.jsx"],"names":["useCallback","useEffect","useState","axios","useForm","FormType","formRef","setShowForm","validator","user","setDialogState","default_values","Email","Password","Full_name","Confirm_password","Gender","Old_password","New_password","values","setValues","handleChange","e","name","value","target","Number","errors","setErrors","isSubmitted","setIsSubmitted","handleSubmit","preventDefault","Object","keys","length","post","then","res","data","message","localStorage","setItem","token","defaults","headers","common","catch","err","title","show","config","Authorization","getItem","id","handleClose","current","className"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst useForm = (FormType, formRef, setShowForm, validator, user, setDialogState) => {\r\n    const default_values = useCallback(() => {\r\n        if (FormType === \"Login\"){\r\n            return {\r\n                Email: \"\",\r\n                Password: \"\"\r\n            }\r\n        }\r\n        if (FormType === \"SignUp\"){\r\n            return {\r\n                Full_name: \"\",\r\n                Email: \"\",\r\n                Password: \"\",\r\n                Confirm_password: \"\",\r\n                Gender: 1\r\n            }\r\n        }\r\n\r\n        if (FormType === \"ForgotPassword\"){\r\n            return {\r\n                Email: \"\"\r\n            }\r\n        }\r\n\r\n        if (FormType === \"ChangePassword\"){\r\n            return {\r\n                Old_password: \"\",\r\n                New_password: \"\",\r\n                Confirm_password: \"\"\r\n            }\r\n        }\r\n    }, [FormType])\r\n\r\n    const [values, setValues] = useState(default_values)\r\n\r\n    const handleChange = e => {\r\n        let { name, value } = e.target\r\n        if (name === \"Gender\") value = Number(value);\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        setErrors({});\r\n        setErrors(validator(FormType, values));\r\n\r\n        setIsSubmitted(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isSubmitted && Object.keys(errors).length === 0){\r\n            if (FormType === \"Login\"){\r\n                axios.post('user/login', values).then(\r\n                    res => {\r\n                        if (res.data.message === 'Authentication successful!'){\r\n                            localStorage.setItem('token', res.data.token);\r\n                            axios.defaults.headers.common['Authorization'] = res.data.token;\r\n                            setShowForm(false)\r\n                        }\r\n                    }\r\n                ).catch(\r\n                    err => {\r\n                        if (err.message === \"Request failed with status code 401\"){\r\n                            setErrors(validator(FormType, 'Wrong email or password!'))\r\n                        }\r\n                        else{\r\n                            setDialogState({\r\n                                title: \"Error!\",\r\n                                message: err.message,\r\n                                show: true\r\n                            })\r\n                        }\r\n                    }\r\n                )  \r\n            }\r\n            if (FormType === \"SignUp\"){\r\n                axios.post('user/sign-up', values).then(\r\n                    res => {\r\n                        setDialogState({\r\n                            title: \"Notify!\",\r\n                            message: res.data.message,\r\n                            show: true\r\n                        });\r\n                        setShowForm(false);\r\n                    }\r\n                ).catch(\r\n                    err => {\r\n                        setDialogState({\r\n                            title: \"Error!\",\r\n                            message: err.message,\r\n                            show: true\r\n                        })\r\n                    }\r\n                )\r\n            }\r\n    \r\n            if (FormType === \"ForgotPassword\"){\r\n                axios.post('user/forgot-password', values).then(\r\n                    res => {\r\n                        setDialogState({\r\n                            title: \"Notify!\",\r\n                            message: \"Your password have been reset successfully! Please check your email for new password! (Make sure to check spam too)\",\r\n                            show: true\r\n                        })\r\n                        setShowForm(false)\r\n                    }\r\n                ).catch(\r\n                    err => {\r\n                        setDialogState({\r\n                            title: \"Error!\",\r\n                            message: err.message,\r\n                            show: true\r\n                        })\r\n                    }\r\n                )\r\n            }\r\n\r\n            if (FormType === \"ChangePassword\"){\r\n                const config = {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n                };\r\n                \r\n                axios.post(\"user/change-password/\" + user.id, values, config).then(res => {\r\n                    setDialogState({\r\n                        title: \"Notify!\",\r\n                        message: \"Your password have been changed successfully! Now you can login again with new password!\",\r\n                        show: true\r\n                    })\r\n                    setShowForm(false)\r\n                }).catch(\r\n                    err => {\r\n                        \r\n                        setDialogState({\r\n                            title: \"Error!\",\r\n                            message: err.message,\r\n                            show: true\r\n                        })\r\n                    }\r\n                )\r\n            }\r\n\r\n            setValues(default_values);\r\n            setIsSubmitted(false);\r\n        }\r\n    }, [errors, FormType, default_values, isSubmitted, setDialogState, setShowForm, validator, values])\r\n\r\n    const handleClose = (e) => {\r\n        if (formRef.current === e.target || e.target.className === \"close-btn\"){\r\n            setIsSubmitted(false)\r\n            setValues(default_values)\r\n            setErrors({})\r\n            setShowForm(false)\r\n        }\r\n    }\r\n\r\n    return { handleSubmit, handleClose, handleChange, values , errors }\r\n}\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}