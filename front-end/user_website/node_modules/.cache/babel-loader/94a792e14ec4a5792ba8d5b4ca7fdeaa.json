{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\n\nconst useFrom = FormType => {\n  _s();\n\n  const [showLogin, setShowLogin] = useState(false);\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n  var formState = {\n    showLogin,\n    showSignUp,\n    showForgotPassword\n  };\n\n  const handlePopup = popupForm => {\n    if (popupForm === \"Login\") {\n      setShowLogin(true);\n      setShowSignUp(false);\n      setShowForgotPassword(false);\n    }\n\n    if (popupForm === \"SignUp\") {\n      setShowLogin(false);\n      setShowSignUp(true);\n      setShowForgotPassword(false);\n    }\n\n    if (popupForm === \"ForgotPassword\") {\n      setShowLogin(false);\n      setShowSignUp(false);\n      setShowForgotPassword(true);\n    }\n  };\n\n  const formRef = useRef();\n\n  const closeForm = e => {\n    if (formRef.current === e.target) {\n      setShowLogin(false);\n      setShowSignUp(false);\n      setShowForgotPassword(false);\n    }\n  };\n\n  const [values, setValues] = useState(() => {\n    if (FormType === \"Login\") {\n      return {\n        email: \"\",\n        password: \"\"\n      };\n    }\n\n    if (FormType === \"SignUp\") {\n      return {\n        full_name: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\",\n        gender: \"\"\n      };\n    }\n\n    if (FormType === \"ForgotPassword\") {\n      return {\n        email: \"\"\n      };\n    }\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return {\n    formState,\n    formRef,\n    handlePopup,\n    closeForm,\n    handleSubmit,\n    handleChange,\n    values\n  };\n};\n\n_s(useFrom, \"cBiwaHyfYwFcBtoatKsJTHKp0A4=\");\n\nexport default useFrom;","map":{"version":3,"sources":["E:/CNTT/MyProjects/Arcade Game Website/Source Code/user_website/src/Components/Popup/Form/useForm.jsx"],"names":["useState","useRef","useFrom","FormType","showLogin","setShowLogin","showSignUp","setShowSignUp","showForgotPassword","setShowForgotPassword","formState","handlePopup","popupForm","formRef","closeForm","e","current","target","values","setValues","email","password","full_name","confirm_password","gender","handleChange","name","value","handleSubmit","preventDefault"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;AAEA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,KAAD,CAA5D;AAEA,MAAIU,SAAS,GAAG;AACZN,IAAAA,SADY;AAEZE,IAAAA,UAFY;AAGZE,IAAAA;AAHY,GAAhB;;AAMA,QAAMG,WAAW,GAAIC,SAAD,IAAe;AAC/B,QAAIA,SAAS,KAAK,OAAlB,EAA0B;AACtBP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH;;AACD,QAAIG,SAAS,KAAK,QAAlB,EAA2B;AACvBP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH;;AACD,QAAIG,SAAS,KAAK,gBAAlB,EAAmC;AAC/BP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH;AACJ,GAhBD;;AAkBA,QAAMI,OAAO,GAAGZ,MAAM,EAAtB;;AACA,QAAMa,SAAS,GAAGC,CAAC,IAAI;AACnB,QAAIF,OAAO,CAACG,OAAR,KAAoBD,CAAC,CAACE,MAA1B,EAAiC;AAC7BZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH;AACJ,GAND;;AAQA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,MAAM;AACvC,QAAIG,QAAQ,KAAK,OAAjB,EAAyB;AACrB,aAAO;AACHiB,QAAAA,KAAK,EAAE,EADJ;AAEHC,QAAAA,QAAQ,EAAE;AAFP,OAAP;AAIH;;AACD,QAAIlB,QAAQ,KAAK,QAAjB,EAA0B;AACtB,aAAO;AACHmB,QAAAA,SAAS,EAAE,EADR;AAEHF,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,QAAQ,EAAE,EAHP;AAIHE,QAAAA,gBAAgB,EAAE,EAJf;AAKHC,QAAAA,MAAM,EAAE;AALL,OAAP;AAOH;;AAED,QAAIrB,QAAQ,KAAK,gBAAjB,EAAkC;AAC9B,aAAO;AACHiB,QAAAA,KAAK,EAAE;AADJ,OAAP;AAGH;AACJ,GAtBmC,CAApC;;AAwBA,QAAMK,YAAY,GAAGV,CAAC,IAAI;AACtB,UAAM;AAAEW,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBZ,CAAC,CAACE,MAA1B;AACAE,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACQ,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAMC,YAAY,GAAGb,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACc,cAAF;AACH,GAFD;;AAIA,SAAO;AAAEnB,IAAAA,SAAF;AAAaG,IAAAA,OAAb;AAAsBF,IAAAA,WAAtB;AAAmCG,IAAAA,SAAnC;AAA8Cc,IAAAA,YAA9C;AAA4DH,IAAAA,YAA5D;AAA0EP,IAAAA;AAA1E,GAAP;AACH,CA3ED;;GAAMhB,O;;AA6EN,eAAeA,OAAf","sourcesContent":["import { useState, useRef } from \"react\";\r\n\r\nconst useFrom = (FormType) => {\r\n    const [showLogin, setShowLogin] = useState(false)\r\n    const [showSignUp, setShowSignUp] = useState(false)\r\n    const [showForgotPassword, setShowForgotPassword] = useState(false)\r\n\r\n    var formState = {\r\n        showLogin,\r\n        showSignUp,\r\n        showForgotPassword\r\n    }\r\n\r\n    const handlePopup = (popupForm) => {\r\n        if (popupForm === \"Login\"){\r\n            setShowLogin(true)\r\n            setShowSignUp(false)\r\n            setShowForgotPassword(false)\r\n        }\r\n        if (popupForm === \"SignUp\"){\r\n            setShowLogin(false)\r\n            setShowSignUp(true)\r\n            setShowForgotPassword(false)\r\n        }\r\n        if (popupForm === \"ForgotPassword\"){\r\n            setShowLogin(false)\r\n            setShowSignUp(false)\r\n            setShowForgotPassword(true)\r\n        }\r\n    }\r\n\r\n    const formRef = useRef();\r\n    const closeForm = e => {\r\n        if (formRef.current === e.target){\r\n            setShowLogin(false)\r\n            setShowSignUp(false)\r\n            setShowForgotPassword(false)\r\n        }\r\n    }\r\n\r\n    const [values, setValues] = useState(() => {\r\n        if (FormType === \"Login\"){\r\n            return {\r\n                email: \"\",\r\n                password: \"\"\r\n            }\r\n        }\r\n        if (FormType === \"SignUp\"){\r\n            return {\r\n                full_name: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirm_password: \"\",\r\n                gender: \"\"\r\n            }\r\n        }\r\n\r\n        if (FormType === \"ForgotPassword\"){\r\n            return {\r\n                email: \"\"\r\n            }\r\n        }\r\n    })\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return { formState, formRef, handlePopup, closeForm, handleSubmit, handleChange, values }\r\n}\r\n\r\nexport default useFrom;"]},"metadata":{},"sourceType":"module"}